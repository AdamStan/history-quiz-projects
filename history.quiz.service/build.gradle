plugins {
    id 'java'
    id 'groovy'
    id 'idea'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.adam.stan'
version = '0.0.1-SNAPSHOT'

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    integration {
        groovy.srcDirs = ["src/integration/groovy"]
        resources.srcDirs "src/integration/resources"
        output.resourcesDir = file("build/classes/integrationTest")
        compileClasspath += sourceSets.test.runtimeClasspath
        runtimeClasspath += sourceSets.integration.compileClasspath
    }
}

idea {
    module {
        sourceDirs += project.sourceSets.integration.groovy.srcDirs
        sourceDirs += project.sourceSets.integration.resources.srcDirs
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // internal
    implementation "com.adam.stan:history-quiz-api:$quizApi"
    compileOnly "io.swagger.core.v3:swagger-annotations:$swaggerVersion"
    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation "org.spockframework:spock-spring:$spockVersion"
    testImplementation "org.apache.groovy:groovy-all:$groovyVersion"
    runtimeOnly 'com.h2database:h2'
}

test {
    useJUnitPlatform()
    group = "verification"
}

tasks.register('integrationTest', Test) {
    description = "Run all integration tests"
    group = "verification"
    useJUnitPlatform()
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

integrationTest.dependsOn integrationClasses
check.dependsOn integrationTest
